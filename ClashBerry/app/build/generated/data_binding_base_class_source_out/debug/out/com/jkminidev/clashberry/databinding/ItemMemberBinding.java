// Generated by view binder compiler. Do not edit!
package com.jkminidev.clashberry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jkminidev.clashberry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMemberBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout layoutAttackInfo;

  @NonNull
  public final LinearLayout layoutAttacks;

  @NonNull
  public final LinearLayout layoutDefenseInfo;

  @NonNull
  public final LinearLayout layoutDefenses;

  @NonNull
  public final TextView tvDefenseTitle;

  @NonNull
  public final TextView tvMapPosition;

  @NonNull
  public final TextView tvMemberName;

  @NonNull
  public final TextView tvMemberTag;

  @NonNull
  public final TextView tvThEmoji;

  private ItemMemberBinding(@NonNull CardView rootView, @NonNull LinearLayout layoutAttackInfo,
      @NonNull LinearLayout layoutAttacks, @NonNull LinearLayout layoutDefenseInfo,
      @NonNull LinearLayout layoutDefenses, @NonNull TextView tvDefenseTitle,
      @NonNull TextView tvMapPosition, @NonNull TextView tvMemberName,
      @NonNull TextView tvMemberTag, @NonNull TextView tvThEmoji) {
    this.rootView = rootView;
    this.layoutAttackInfo = layoutAttackInfo;
    this.layoutAttacks = layoutAttacks;
    this.layoutDefenseInfo = layoutDefenseInfo;
    this.layoutDefenses = layoutDefenses;
    this.tvDefenseTitle = tvDefenseTitle;
    this.tvMapPosition = tvMapPosition;
    this.tvMemberName = tvMemberName;
    this.tvMemberTag = tvMemberTag;
    this.tvThEmoji = tvThEmoji;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layoutAttackInfo;
      LinearLayout layoutAttackInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutAttackInfo == null) {
        break missingId;
      }

      id = R.id.layoutAttacks;
      LinearLayout layoutAttacks = ViewBindings.findChildViewById(rootView, id);
      if (layoutAttacks == null) {
        break missingId;
      }

      id = R.id.layoutDefenseInfo;
      LinearLayout layoutDefenseInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutDefenseInfo == null) {
        break missingId;
      }

      id = R.id.layoutDefenses;
      LinearLayout layoutDefenses = ViewBindings.findChildViewById(rootView, id);
      if (layoutDefenses == null) {
        break missingId;
      }

      id = R.id.tvDefenseTitle;
      TextView tvDefenseTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDefenseTitle == null) {
        break missingId;
      }

      id = R.id.tvMapPosition;
      TextView tvMapPosition = ViewBindings.findChildViewById(rootView, id);
      if (tvMapPosition == null) {
        break missingId;
      }

      id = R.id.tvMemberName;
      TextView tvMemberName = ViewBindings.findChildViewById(rootView, id);
      if (tvMemberName == null) {
        break missingId;
      }

      id = R.id.tvMemberTag;
      TextView tvMemberTag = ViewBindings.findChildViewById(rootView, id);
      if (tvMemberTag == null) {
        break missingId;
      }

      id = R.id.tvThEmoji;
      TextView tvThEmoji = ViewBindings.findChildViewById(rootView, id);
      if (tvThEmoji == null) {
        break missingId;
      }

      return new ItemMemberBinding((CardView) rootView, layoutAttackInfo, layoutAttacks,
          layoutDefenseInfo, layoutDefenses, tvDefenseTitle, tvMapPosition, tvMemberName,
          tvMemberTag, tvThEmoji);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

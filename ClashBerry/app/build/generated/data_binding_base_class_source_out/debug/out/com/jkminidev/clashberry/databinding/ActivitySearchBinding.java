// Generated by view binder compiler. Do not edit!
package com.jkminidev.clashberry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.jkminidev.clashberry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final Button btnRetry;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final TextView errorText;

  @NonNull
  public final TextInputEditText etSearchTag;

  @NonNull
  public final LinearLayout searchErrorLayout;

  @NonNull
  public final LinearLayout searchLoadingLayout;

  @NonNull
  public final RecyclerView searchResultsRecyclerView;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final TextInputLayout tilSearchTag;

  private ActivitySearchBinding(@NonNull LinearLayout rootView, @NonNull ImageButton backButton,
      @NonNull Button btnRetry, @NonNull Button btnSearch, @NonNull TextView errorText,
      @NonNull TextInputEditText etSearchTag, @NonNull LinearLayout searchErrorLayout,
      @NonNull LinearLayout searchLoadingLayout, @NonNull RecyclerView searchResultsRecyclerView,
      @NonNull SwipeRefreshLayout swipeRefreshLayout, @NonNull TextInputLayout tilSearchTag) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.btnRetry = btnRetry;
    this.btnSearch = btnSearch;
    this.errorText = errorText;
    this.etSearchTag = etSearchTag;
    this.searchErrorLayout = searchErrorLayout;
    this.searchLoadingLayout = searchLoadingLayout;
    this.searchResultsRecyclerView = searchResultsRecyclerView;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.tilSearchTag = tilSearchTag;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.btnRetry;
      Button btnRetry = ViewBindings.findChildViewById(rootView, id);
      if (btnRetry == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.errorText;
      TextView errorText = ViewBindings.findChildViewById(rootView, id);
      if (errorText == null) {
        break missingId;
      }

      id = R.id.etSearchTag;
      TextInputEditText etSearchTag = ViewBindings.findChildViewById(rootView, id);
      if (etSearchTag == null) {
        break missingId;
      }

      id = R.id.searchErrorLayout;
      LinearLayout searchErrorLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchErrorLayout == null) {
        break missingId;
      }

      id = R.id.searchLoadingLayout;
      LinearLayout searchLoadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLoadingLayout == null) {
        break missingId;
      }

      id = R.id.searchResultsRecyclerView;
      RecyclerView searchResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsRecyclerView == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.tilSearchTag;
      TextInputLayout tilSearchTag = ViewBindings.findChildViewById(rootView, id);
      if (tilSearchTag == null) {
        break missingId;
      }

      return new ActivitySearchBinding((LinearLayout) rootView, backButton, btnRetry, btnSearch,
          errorText, etSearchTag, searchErrorLayout, searchLoadingLayout, searchResultsRecyclerView,
          swipeRefreshLayout, tilSearchTag);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

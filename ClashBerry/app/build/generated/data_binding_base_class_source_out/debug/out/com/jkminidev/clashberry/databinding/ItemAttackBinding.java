// Generated by view binder compiler. Do not edit!
package com.jkminidev.clashberry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jkminidev.clashberry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAttackBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvAttackInfo;

  @NonNull
  public final TextView tvDestruction;

  @NonNull
  public final TextView tvStars;

  private ItemAttackBinding(@NonNull LinearLayout rootView, @NonNull TextView tvAttackInfo,
      @NonNull TextView tvDestruction, @NonNull TextView tvStars) {
    this.rootView = rootView;
    this.tvAttackInfo = tvAttackInfo;
    this.tvDestruction = tvDestruction;
    this.tvStars = tvStars;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAttackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAttackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_attack, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAttackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvAttackInfo;
      TextView tvAttackInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvAttackInfo == null) {
        break missingId;
      }

      id = R.id.tvDestruction;
      TextView tvDestruction = ViewBindings.findChildViewById(rootView, id);
      if (tvDestruction == null) {
        break missingId;
      }

      id = R.id.tvStars;
      TextView tvStars = ViewBindings.findChildViewById(rootView, id);
      if (tvStars == null) {
        break missingId;
      }

      return new ItemAttackBinding((LinearLayout) rootView, tvAttackInfo, tvDestruction, tvStars);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
